---
####################################################
# Pipeline Build Task Configuration (Invoke-Build) #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_Changelog_Release_Output

  docs:
    - Clean_WikiContent_Folder
    - Check_SqlServer_Availability
    - Generate_Conceptual_Help
    - Generate_Wiki_Content
    - Generate_Wiki_Sidebar
    - Clean_Markdown_Metadata
    - Package_Wiki_Content

  pack:
    - build
    - docs
    - package_module_nupkg # cSpell: disable-line

  hqrmtest: # cSpell: disable-line
    - Invoke_HQRM_Tests_Stop_On_Fail

  test:
    - Pester_Tests_Stop_On_Fail
    - Convert_Pester_Coverage
    - Pester_If_Code_Coverage_Under_Threshold

  publish:
    - Publish_Release_To_GitHub
    - Publish_Module_To_gallery
    - Publish_GitHub_Wiki_Content

  Check_SqlServer_Availability: |
    {
        Import-Module -Name SqlServer -ErrorAction 'SilentlyContinue'

        try
        {
            [Microsoft.SqlServer.Management.Smo.Server] -as [Type] | Out-Null
            [Microsoft.SqlServer.Management.Smo.Wmi.Service] -as [Type] | Out-Null
        }
        catch
        {
            Write-Error -Message "Both the SqlServer namespaces Microsoft.SqlServer.Management.Smo or Microsoft.SqlServer.Management.Smo.Wmi are not available. Please install the SqlServer module.`nBy using PSResourceGet: Save-PSResource -Name SqlServer -Prerelease -Repository PSGallery -TrustRepository -Path .\output\RequiredModules\" -ErrorAction 'Stop'
        }
    }

  Clean_WikiContent_Folder: |
    {
        # Clean output/WikiContent folder
        if (Test-Path -Path './output/WikiContent')
        {
            Remove-Item -Path './output/WikiContent' -Recurse -Force
        }
    }
####################################################
#           ModuleBuilder Configuration            #
####################################################
CopyPaths:
  - DSCResources
  - en-US
  - Modules
Prefix: prefix.ps1
Suffix: suffix.ps1
Encoding: UTF8
VersionedOutputDirectory: true
BuiltModuleSubdirectory: builtModule

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'
  DscResource.DocGenerator:
    - 'Task.*'
  DscResource.Test:
    - 'Task.*'

TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

####################################################
#     Dependent Modules Configuration (Sampler)    #
####################################################
NestedModule:
  DscResource.Common:
    CopyOnly: true
    Path: ./output/RequiredModules/DscResource.Common
    AddToManifest: false
    Exclude: PSGetModuleInfo.xml

  DscResource.Base:
    CopyOnly: true
    Path: ./output/RequiredModules/DscResource.Base
    AddToManifest: false
    Exclude: PSGetModuleInfo.xml

####################################################
#          Pester Configuration (Sampler)          #
####################################################
Pester:
  Configuration:
    Run:
      Path:
        - tests/Unit
    Output:
      Verbosity: Detailed
      StackTraceVerbosity: Full
      CIFormat: Auto
    CodeCoverage:
      CoveragePercentTarget: 85
      OutputPath: JaCoCo_coverage.xml
      OutputEncoding: ascii
      UseBreakpoints: false
    TestResult:
      OutputFormat: NUnitXML
      OutputEncoding: ascii
  ExcludeFromCodeCoverage:
    - Modules/DscResource.Common
    - Modules/DscResource.Base

####################################################
#      Pester Configuration (DscResource.Test)     #
####################################################
DscTest:
  Pester:
    Configuration:
      Filter:
        ExcludeTag:
          - "Common Tests - New Error-Level Script Analyzer Rules"
      Output:
        Verbosity: Detailed
        CIFormat: Auto
      TestResult:
        Enabled: true
        OutputFormat: NUnitXML
        OutputEncoding: ascii
        OutputPath: ./output/testResults/NUnitXml_HQRM_Tests.xml
  Script:
    ExcludeSourceFile:
      - output
    ExcludeModuleFile:
      - Modules/DscResource.Common
      - Modules/DscResource.Base
      # Must exclude built module file because it should not be tested like MOF-based resources
      - SqlServerDsc.psm1
    MainGitBranch: main

####################################################
#              PSDepend Configuration              #
####################################################
Resolve-Dependency:
  Gallery: 'PSGallery'
  AllowPrerelease: false
  Verbose: false

####################################################
#               GitHub Configuration               #
####################################################
GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  ReleaseAssets:
    - output/WikiContent.zip
  GitHubConfigUserName: dscbot # cSpell: disable-line
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  Generate_Conceptual_Help:
    MarkdownCodeRegularExpression:
      - '\`(.+?)\`' # Match inline code-block
      - '\\(\\)' # Match escaped backslash
      - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
      - '_(.+?)_' # Match Italic (underscore)
      - '\*\*(.+?)\*\*' # Match bold
      - '\*(.+?)\*' # Match Italic (asterisk)
  Publish_GitHub_Wiki_Content:
    Debug: false
  Generate_Markdown_For_DSC_Resources:
    MofResourceMetadata:
      Type: MofResource
      Category: Resources
    ClassResourceMetadata:
      Type: ClassResource
      Category: Resources
    CompositeResourceMetadata:
      Type: CompositeResource
      Category: Resources
  Generate_Wiki_Sidebar:
     Debug: false
     AlwaysOverwrite: true
