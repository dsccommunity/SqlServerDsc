---
####################################################
# Pipeline Build Task Configuration (Invoke-Build) #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_Changelog_Release_Output
    - Generate_Conceptual_Help
    - Generate_Wiki_Content

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - Invoke_HQRM_Tests_Stop_On_Fail

  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_Run_Times
    - Pester_If_Code_Coverage_Under_Threshold

  publish:
    - Publish_Release_To_GitHub
    - Publish_Module_To_gallery
    - Publish_GitHub_Wiki_Content
    - Create_ChangeLog_GitHub_PR

  # Synopsis: List the run time for each Pester test.
  Pester_Run_Times: |
    {
        param
        (
            # Project path
            [Parameter()]
            [System.String]
            $ProjectPath = (property ProjectPath $BuildRoot),

            [Parameter()]
            # Base directory of all output (default to 'output')
            [System.String]
            $OutputDirectory = (property OutputDirectory (Join-Path $BuildRoot 'output')),

            [Parameter()]
            [System.String]
            $ProjectName = (property ProjectName ''),

            [Parameter()]
            [System.String]
            $PesterOutputFolder = (property PesterOutputFolder 'testResults'),

            # Build Configuration object
            [Parameter()]
            [System.Collections.Hashtable]
            $BuildInfo = (property BuildInfo @{ })
        )

        # Get the vales for task variables, see https://github.com/gaelcolas/Sampler#task-variables.
        . Set-SamplerTaskVariable

        $PesterOutputFolder = Get-SamplerAbsolutePath -Path $PesterOutputFolder -RelativeTo $OutputDirectory

        $getPesterOutputFileFileNameParameters = @{
            ProjectName       = $ProjectName
            ModuleVersion     = $ModuleVersion
            OsShortName       = Get-OperatingSystemShortName
            PowerShellVersion = ('PSv.{0}' -f $PSVersionTable.PSVersion)
        }

        $PesterOutputFileFileName = Get-PesterOutputFileFileName @getPesterOutputFileFileNameParameters

        $PesterResultObjectClixml = Join-Path $PesterOutputFolder "PesterObject_$PesterOutputFileFileName"

        "`tPester Output Folder     = {0}" -f $PesterOutputFolder
        "`tPester Output Object     = {0}" -f $PesterResultObjectClixml
        ""

        if ((Test-Path -Path $PesterResultObjectClixml))
        {
            $pesterObject = Import-Clixml -Path $PesterResultObjectClixml

            $maxColumnLength = ($pesterObject.Containers | ForEach-Object -Process { $_.Item.Name.Length } | Measure-Object -Maximum).Maximum
            $maxColumnLength += 2

            "Test script file{0}Duration" -f "".PadRight($maxColumnLength - 16)
            "".PadRight($maxColumnLength + 25, '-') # Adding 25 chars to cover the time in clear text

            $pesterObject.Containers | ForEach-Object -Process {
              $padding = $maxColumnLength - $_.Item.Name.Length

              "{0}{1}{2} ({3})" -f $_.Item.Name, "".PadRight($padding), ($_.Duration.ToString("''m' minutes 's' seconds'") -replace '0 minutes ', ''), $_.Result
            }

            ""
            "Total run time:`t{0}" -f $pesterObject.Duration.ToString("''m' minutes 's' seconds'")
            ""
        }
        else
        {
            Write-Warning -Message 'Pester result object not found.'
        }
    }

####################################################
#           ModuleBuilder Configuration            #
####################################################
CopyPaths:
  - DSCResources
  - en-US
  - Modules
Encoding: UTF8
VersionedOutputDirectory: true

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'
  DscResource.DocGenerator:
    - 'Task.*'
  DscResource.Test:
    - 'Task.*'

TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

####################################################
#     Dependent Modules Configuration (Sampler)    #
####################################################
NestedModule:
  DscResource.Common:
    CopyOnly: true
    Path: ./output/RequiredModules/DscResource.Common
    AddToManifest: false
    Exclude: PSGetModuleInfo.xml

####################################################
#          Pester Configuration (Sampler)          #
####################################################
Pester:
  Configuration:
    Run:
      Path:
        - tests/Unit
    Output:
      Verbosity: Detailed
      StackTraceVerbosity: Full
      CIFormat: Auto
    CodeCoverage:
      CoveragePercentTarget: 85
      OutputPath: JaCoCo_coverage.xml
      OutputEncoding: ascii
      UseBreakpoints: false
    TestResult:
      OutputFormat: NUnitXML
      OutputEncoding: ascii
  ExcludeFromCodeCoverage:
    - Modules/DscResource.Common

####################################################
#      Pester Configuration (DscResource.Test)     #
####################################################
DscTest:
  Pester:
    Configuration:
      Filter:
        ExcludeTag:
          - "Common Tests - New Error-Level Script Analyzer Rules"
      Output:
        Verbosity: Detailed
        CIFormat: Auto
      TestResult:
        OutputFormat: NUnitXML
        OutputEncoding: ascii
        OutputPath: ./output/testResults/NUnitXml_HQRM_Tests.xml
  Script:
    ExcludeSourceFile:
      - output
    ExcludeModuleFile:
      - Modules/DscResource.Common
    MainGitBranch: main

####################################################
#              PSDepend Configuration              #
####################################################
Resolve-Dependency:
  Gallery: 'PSGallery'
  AllowPrerelease: false
  Verbose: false

####################################################
#               GitHub Configuration               #
####################################################
GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: dscbot
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  Generate_Conceptual_Help:
    MarkdownCodeRegularExpression:
      - '\`(.+?)\`' # Match inline code-block
      - '\\(\\)' # Match escaped backslash
      - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
      - '_(.+?)_' # Match Italic (underscore)
      - '\*\*(.+?)\*\*' # Match bold
      - '\*(.+?)\*' # Match Italic (asterisk)
