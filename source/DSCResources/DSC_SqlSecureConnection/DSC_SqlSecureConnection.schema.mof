
[ClassVersion("1.0.0.0"), FriendlyName("SqlSecureConnection")]
class DSC_SqlSecureConnection : OMI_BaseResource
{
    [Key, Description("Name of the _SQL Server_ instance to be configured.")] String InstanceName;
    [Required, Description("Thumbprint of the certificate being used for encryption. If parameter **Ensure** is set to `'Absent'` then the parameter **Certificate** can be set to an empty string.")] String Thumbprint;
    [Write, Description("If all connections to the _SQL Server_ instance should be encrypted. If this parameter is not assigned a value, the default value is `$true` meaning that all connections must be encrypted.")] boolean ForceEncryption;
    [Required, Description("Name of the account running the _SQL Server_ _Windows_ service. If this parameter is set to `'LocalSystem'` then a connection error is displayed, instead use the value `'SYSTEM'`.")] String ServiceAccount;
    [Write, Description("If set to `$true` then the required restart will be suppressed. You will need to restart the service before changes will take effect. The default value is `$false`.")] Boolean SuppressRestart;
    [Write, Description("If encryption should be enabled (`'Present'`) or disabled (`'Absent'`)."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Specifies the host name that will be used when restarting the SQL Server instance. If the SQL Server belongs to a cluster or availability group specify the host name for the listener or cluster group. The specified name must match the name that is used by the certificate specified for the parameter `Thumbprint`. Default value is `localhost`.")] String ServerName;
};
