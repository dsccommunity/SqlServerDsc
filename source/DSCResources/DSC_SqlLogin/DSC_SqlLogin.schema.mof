[ClassVersion("1.0.0.0"), FriendlyName("SqlLogin")]
class DSC_SqlLogin : OMI_BaseResource
{
    [Key, Description("The name of the login.")] String Name;
    [Key, Description("Name of the _SQL Server_ instance to be configured.")] String InstanceName;
    [Write, Description("The specified login should be `'Present'` or `'Absent'`. Default is `'Present'`."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("The type of login to be created. If LoginType is `'WindowsUser'` or `'WindowsGroup'` then provide the name in the format `DOMAIN\\name`. Default is `'WindowsUser'`. The login types `'Certificate'`, `'AsymmetricKey'`, `'ExternalUser'`, and `'ExternalGroup'` are not yet implemented and will currently throw an exception if used."),
        ValueMap{"WindowsUser","WindowsGroup","SqlLogin","Certificate","AsymmetricKey","ExternalUser","ExternalGroup"},
        Values{"WindowsUser","WindowsGroup","SqlLogin","Certificate","AsymmetricKey","ExternalUser","ExternalGroup"}] String LoginType;
    [Write, Description("The hostname of the _SQL Server_ to be configured. Default value is the current computer name.")] String ServerName;
    [Write, EmbeddedInstance("MSFT_Credential"), Description("Specifies the password as a `[PSCredential]` object. Only applies to _SQL Logins_.")] String LoginCredential;
    [Write, Description("Specifies if the login is required to have its password change on the next login. Only applies to _SQL Logins_. This cannot be updated on a pre-existing _SQL Login_ and any attempt to do this will throw an exception.")] Boolean LoginMustChangePassword;
    [Write, Description("Specifies if the login password is required to expire in accordance to the operating system security policy. Only applies to _SQL Logins_.")] Boolean LoginPasswordExpirationEnabled;
    [Write, Description("Specifies if the login password is required to conform to the password policy specified in the system security policy. Only applies to _SQL Logins_.")] Boolean LoginPasswordPolicyEnforced;
    [Write, Description("Specifies if the login is disabled. Default value is `$false`.")] Boolean Disabled;
    [Write, Description("Specifies the default database name.")] String DefaultDatabase;
};
